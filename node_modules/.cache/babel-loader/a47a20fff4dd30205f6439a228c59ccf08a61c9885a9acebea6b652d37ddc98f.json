{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Begum\\\\OneDrive\\\\Documents\\\\reactjsProjects\\\\01-starting-project\\\\01-starting-project\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Header from './Component/Header';\nimport Table from './Component/Table';\nimport UserForm from './Component/UserForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // const [yearlyDataSet, setYearlyData] = useState('');\n  const [data, setData] = useState({\n    'current-savings': 0,\n    'yearly-contribution': 0,\n    'expected-return': 0,\n    duration: 0\n  });\n  const calculateHandler = userInput => {\n    // // Should be triggered when form is submitted\n    // // You might not directly want to bind it to the submit event on the form though...\n\n    // per-year results\n    const yearlyData = [];\n    let currentSavings = +userInput['current-savings']; // feel free to change the shape of this input object!\n    const yearlyContribution = +userInput['yearly-contribution']; // as mentioned: feel free to change the shape...\n    const expectedReturn = +userInput['expected-return'] / 100;\n    const duration = +userInput['duration'];\n    console.log(yearlyData, 'd', currentSavings, 'e', yearlyContribution, 'f', expectedReturn, 'g', duration);\n\n    // The below code calculates yearly results (total savings, interest etc)\n    for (let i = 0; i < duration; i++) {\n      const yearlyInterest = currentSavings * expectedReturn;\n      currentSavings += yearlyInterest + yearlyContribution;\n      yearlyData.push({\n        // feel free to change the shape of the data pushed to the array!\n        year: i + 1,\n        yearlyInterest: yearlyInterest,\n        savingsEndOfYear: currentSavings,\n        yearlyContribution: yearlyContribution\n      });\n    }\n    console.log(yearlyData, 'yearly');\n    setData(yearlyData);\n    console.log(data, 'data');\n    // do something with yearlyData ...\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UserForm, {\n      calculateHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"geFzGEvEwh0azUIZeLX6aq6ajYg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Header","Table","UserForm","jsxDEV","_jsxDEV","App","_s","data","setData","duration","calculateHandler","userInput","yearlyData","currentSavings","yearlyContribution","expectedReturn","console","log","i","yearlyInterest","push","year","savingsEndOfYear","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Begum/OneDrive/Documents/reactjsProjects/01-starting-project/01-starting-project/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Header from './Component/Header';\nimport Table from './Component/Table';\nimport UserForm from './Component/UserForm';\n\nfunction App() {\n  // const [yearlyDataSet, setYearlyData] = useState('');\n  const [data, setData] = useState({\n    'current-savings': 0,\n    'yearly-contribution': 0,\n    'expected-return': 0,\n    duration: 0,\n  });\n  const calculateHandler = (userInput) => {\n    // // Should be triggered when form is submitted\n    // // You might not directly want to bind it to the submit event on the form though...\n\n    // per-year results\n    const yearlyData = [];\n    let currentSavings = +userInput['current-savings']; // feel free to change the shape of this input object!\n    const yearlyContribution = +userInput['yearly-contribution']; // as mentioned: feel free to change the shape...\n    const expectedReturn = +userInput['expected-return'] / 100;\n    const duration = +userInput['duration'];\n\n    console.log(yearlyData, 'd', currentSavings, 'e', yearlyContribution, 'f', expectedReturn, 'g', duration);\n\n    // The below code calculates yearly results (total savings, interest etc)\n    for (let i = 0; i < duration; i++) {\n      const yearlyInterest = currentSavings * expectedReturn;\n      currentSavings += yearlyInterest + yearlyContribution;\n      yearlyData.push({\n        // feel free to change the shape of the data pushed to the array!\n        year: i + 1,\n        yearlyInterest: yearlyInterest,\n        savingsEndOfYear: currentSavings,\n        yearlyContribution: yearlyContribution,\n      });\n    }\n    console.log(yearlyData, 'yearly');\n    setData(yearlyData)\n    console.log(data, 'data');\n    // do something with yearlyData ...\n  };\n\n  return (\n    <div>\n      <Header />\n      <UserForm  {...{ calculateHandler }} />\n      {/* Todo: Show below table conditionally (only once result data is available) */}\n      {/* Show fallback text if no data is available */}\n      {/* <Table data={data} /> */}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,oBAAoB;AACvC,OAAOC,KAAK,MAAM,mBAAmB;AACrC,OAAOC,QAAQ,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC;IAC/B,iBAAiB,EAAE,CAAC;IACpB,qBAAqB,EAAE,CAAC;IACxB,iBAAiB,EAAE,CAAC;IACpBU,QAAQ,EAAE;EACZ,CAAC,CAAC;EACF,MAAMC,gBAAgB,GAAIC,SAAS,IAAK;IACtC;IACA;;IAEA;IACA,MAAMC,UAAU,GAAG,EAAE;IACrB,IAAIC,cAAc,GAAG,CAACF,SAAS,CAAC,iBAAiB,CAAC,CAAC,CAAC;IACpD,MAAMG,kBAAkB,GAAG,CAACH,SAAS,CAAC,qBAAqB,CAAC,CAAC,CAAC;IAC9D,MAAMI,cAAc,GAAG,CAACJ,SAAS,CAAC,iBAAiB,CAAC,GAAG,GAAG;IAC1D,MAAMF,QAAQ,GAAG,CAACE,SAAS,CAAC,UAAU,CAAC;IAEvCK,OAAO,CAACC,GAAG,CAACL,UAAU,EAAE,GAAG,EAAEC,cAAc,EAAE,GAAG,EAAEC,kBAAkB,EAAE,GAAG,EAAEC,cAAc,EAAE,GAAG,EAAEN,QAAQ,CAAC;;IAEzG;IACA,KAAK,IAAIS,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGT,QAAQ,EAAES,CAAC,EAAE,EAAE;MACjC,MAAMC,cAAc,GAAGN,cAAc,GAAGE,cAAc;MACtDF,cAAc,IAAIM,cAAc,GAAGL,kBAAkB;MACrDF,UAAU,CAACQ,IAAI,CAAC;QACd;QACAC,IAAI,EAAEH,CAAC,GAAG,CAAC;QACXC,cAAc,EAAEA,cAAc;QAC9BG,gBAAgB,EAAET,cAAc;QAChCC,kBAAkB,EAAEA;MACtB,CAAC,CAAC;IACJ;IACAE,OAAO,CAACC,GAAG,CAACL,UAAU,EAAE,QAAQ,CAAC;IACjCJ,OAAO,CAACI,UAAU,CAAC;IACnBI,OAAO,CAACC,GAAG,CAACV,IAAI,EAAE,MAAM,CAAC;IACzB;EACF,CAAC;;EAED,oBACEH,OAAA;IAAAmB,QAAA,gBACEnB,OAAA,CAACJ,MAAM;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVvB,OAAA,CAACF,QAAQ;MAAQQ;IAAgB;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAIpC,CAAC;AAEV;AAACrB,EAAA,CAhDQD,GAAG;AAAAuB,EAAA,GAAHvB,GAAG;AAkDZ,eAAeA,GAAG;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}